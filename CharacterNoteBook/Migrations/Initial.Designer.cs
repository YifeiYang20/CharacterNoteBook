// <auto-generated />
using CharacterNoteBook.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharacterNoteBook.Migrations
{
    [DbContext(typeof(NoteBookContext))]
    [Migration("20190907050733_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("UsedCharacterVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharacterNoteBook.Models.TheSpecies", b =>
                {
                    b.Property<int>("TheSpeciesID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("TheSpeciesID");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            TheSpeciesID = 1,
                            Name = "Characters"
                        },
                        //new
                        //{
                        //    TheSpeciesID = 2,
                        //    Name = "StoryElements"
                        //},
                        new
                        {
                            TheSpeciesID = 3,
                            Name = "Story Elements"
                        });
                });

            modelBuilder.Entity("CharacterNoteBook.Models.UsedCharacter", b =>
                {
                    b.Property<int>("UsedCharacterID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TheSpeciesID");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Species")
                        .IsRequired();

                    b.HasKey("UsedCharacterID");

                    b.HasIndex("TheSpeciesID");

                    b.ToTable("UsedCharacters");

                    b.HasData(
                        new
                        {
                            UsedCharacterID = 1,
                            TheSpeciesID = 1,
                            Code = "1",
                            Name = "Vitriol (Medical raw material supplier)",
                            Species = "Mermaid"
                        },
                        new
                        {
                            UsedCharacterID = 2,
                            TheSpeciesID = 1,
                            Code = "1",
                            Name = "Copper (Fire awareness publicity volunteer)",
                            Species = "Phoenix"
                        },
                        new
                        {
                            UsedCharacterID = 3,
                            TheSpeciesID = 1,
                            Code = "2",
                            Name = "MoLing (Engineering painter with highly competitive science)",
                            Species = "Fox"
                        },
                        new
                        {
                            UsedCharacterID = 4,
                            TheSpeciesID = 1,
                            Code = "2",
                            Name = "JunQing (Surrealist and idealist writer)",
                            Species = "Bunny"
                        },
                        new
                        {
                            UsedCharacterID = 5,
                            TheSpeciesID = 1,
                            Code = "3",
                            Name = "Erin (Medical expert with a small amount of anti social consciousness)",
                            Species = "Bear"
                        },
                        new
                        {
                            UsedCharacterID = 6,
                            TheSpeciesID = 1,
                            Code = "3",
                            Name = "Phoebus (A peace ambassador who has made great contributions to society)",
                            Species = "Bear"
                        },
                        new
                        {
                            UsedCharacterID = 13,
                            TheSpeciesID = 1,
                            Code = "4",
                            Name = "Sofia (Versatile vtuber)",
                            Species = "Mermaid"
                        },
                        new
                        {
                            UsedCharacterID = 14,
                            TheSpeciesID = 1,
                            Code = "4",
                            Name = "Hydro (Marine Environmental Protection Ambassador)",
                            Species = "Jellyfish"
                        },
                        new
                        {
                            UnusedCharacterID = 15,
                            TheSpeciesID = 3,
                            Code = "5",
                            Name = "One of them picked up a stray cat",
                            Species = " "
                        },
                        new
                        {
                            UnusedCharacterID = 16,
                            TheSpeciesID = 3,
                            Code = "6",
                            Name = "They live in the same apartment, but today one of them triggered a fire while cooking for everyone",
                            Species = " "
                        },
                        new
                        {
                            UnusedCharacterID = 17,
                            TheSpeciesID = 3,
                            Code = "7",
                            Name = "Two of them were photographed by their classmates when they were traveling together and said they were lovers, but they were not",
                            Species = " "
                        },
                        new
                        {
                            UnusedCharacterID = 18,
                            TheSpeciesID = 3,
                            Code = "8",
                            Name = "The police broke into their party and took one of them",
                            Species = " "
                        }
                        );
                });

            modelBuilder.Entity("CharacterNoteBook.Models.UsedCharacter", b =>
                {
                    b.HasOne("CharacterNoteBook.Models.TheSpecies", "TheSpecies")
                        .WithMany()
                        .HasForeignKey("TheSpeciesID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
